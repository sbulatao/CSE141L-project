; R0=0/1
; R1=22
; R2=DATA_LOW_ADDR, DATA_LOW
; R3=DATA_HIGH_ADDR, DATA_HIGH
; R4=TRAP
; R5=SGN
; R6=EXP
; R7=GENERAL

; LOAD R2=DATA_LOW, R3=DATA_HIGH
LWR 2   ; ACC=MEM(R2)=DATA_LOW
MOV 2   ; R2=DATA_LOW
LWR 3   ; ACC=MEM(R3)=DATA_HIGH
MOV 3   ; R3=DATA_HIGH

; LOAD R1=22
LWI 7   ; ACC=7
SLL 2   ; ACC=7<<2=28
SUB 6   ; ACC=28-6=22
MOV 1   ; R1=22

; LOAD R5=SGN
LWI 1   ; ACC=1
SLL 7   ; ACC=8'B1000_0000
AND 3   ; ACC=DATA_HIGH&1000_0000
BAN     ; ACC=SGN
MOV 5   ; R5=SGN
; DETERMINE WHETHER TO ABS
LWI 0   ; ACC=1
MOV 0   ; R0=1
EQ 5 0
BRC LABEL_ABS       ; IF R0=R5 (SGN=1), BRC
JMP LABEL_ABS_END   ; ELSE, SKIP

; CALCULATE ABS VALUE
LABEL_ABS:  
LWR 7   ; ACC=8'B111
SLL 3   ; ACC=8'B1110_00
ADDI 7  ; ACC=8'B1111_11
SLL 2   ; ACC=8'B1111_1100
ADDI 3  ; ACC=8'B1111_1111
MOV 7   ; R7=8'B1111_1111
LWI 0   ; CLEAR ACC
OR 2    ; ACC=0|DATA_LOW = DATA_LOW
XOR 7   ; ACC=DATA_LOW^8'B1111_1111=~DATA_LOW
MOV 2   ; R2=UPDATED DATA_LOW
OR 3    ; ACC=0|DATA_HIGH = DATA_HIGH
XOR 7   ; ACC=DATA_HIGH^8'B1111_1111=~DATA_HIGH
MOV 3   ; R3=UPDATED DATA_HIGH
LABEL_ABS_END:

;LOAD R4=TRAP
LWI 0   ; CLEAR ACC
OR 2    ; ACC=0|DATA_LOW = DATA_LOW
BOR     ; ACC=|(DATA_LOW)
MOV 7   ; R7=|(DATA_LOW)
LWI 0   ; CLEAR ACC
OR 3    ; ACC=0|DATA_HIGH = DATA_HIGH
SLL 1   ; ACC=DATA_HIGH<<1 (GET RID OF SGN)
BOR     ; ACC=|(DATA_HIGH<<1)
AND 7   ; ACC=|(DATA_HIGH<<1) & |(DATA_LOW)=TRAP
MOV 4   ; R4=TRAP
LWI 1	; ACC=1
MOV 0	; R0=ACC=1
EQ 4 0
BRC LABEL_TRAP	; IF R4=R0 (TRAP=1), BRC
; LWI
; SLL
; ADDI	; ACC=LABEL_TRAP_END
JR

LABEL_TRAP:
LWI 1	; ACC=1
MOV 0	; R0=ACC=1
EQ 5 0
BRC SET_EXP_22
LWI 0	; ACC=0
MOV 6	; R6=ACC=0 (EXP=0)
; LWI
; SLL
; ADDI	; ACC=LABEL_TRAP_END
JR

SET_EXP_22:
LWI 0	; ACC=0
OR 1	; ACC=0|22=22
MOV 6	; R6=ACC=22
LABEL_TRAP_END:

; FIND_EXP
LWI 1	; ACC=1
MOV 0	; R0=1
SLL 6	; ACC=8'B0100_0000
MOV 7	; R7=8'B0100_0000
LWI 0	; CLEAR ACC
OR 3	; ACC=DATA_HIGH
MOV 4	; R4=DATA_HIGH (BACK_UP)
LABEL_LOOP:
AND 7	; ACC=DATA_HIGH&8'B0100_0000
BAN
MOV 7	; R7=(INT1[15]==1)
EQ 7 0
BRC LABEL_FINISH		; NEED CHANGE TO JR
; EXP-1
OR 6	; ACC=R6=EXP
SUBI 1	; EXP=EXP-1
MOV 6	; ACC=UPDATED ACC
LWI 7	; ACC=7
SLL 1	; ACC=7<<1=14
ADDI 1	; ACC=15
MOV 7	; R7=15
EQ 6 7	; IF(EXP=15)
BRC LABEL_LOWERBIT
LWI 0	; CLEAR ACC
OR 4	; ACC=DATA_HIGH
SLL 1	; ACC<<1
; LWI
; SLL
; ADDI	; ACC=LABEL_LOOP
JR

LABEL_LOWERBIT:
LWI 1	; ACC=1
MOV 0	; R0=1
SLL 7	; ACC=8'B1000_0000
MOV 7	; R7=8'B1000_0000
LWI 0	; CLEAR ACC
OR 2	; ACC=DATA_LOW
MOV 4	; R4=DATA_LOW (BACK_UP)
AND 7	; ACC=DATA_HIGH&8'B1000_0000
BAN
MOV 7	; R7=(INT1[15]==1)
EQ 7 0
BRC LABEL_FINISH		; NEED CHANGE TO JR
OR 6	; ACC=R6=EXP
SUBI 1	; EXP=EXP-1
MOV 6	; ACC=UPDATED ACC
LWI 7	; ACC=7
MOV 7	; R7=7
EQ 6 7	; IF(EXP=7)
BRC LABEL_FINISH

LABEL_FINISH:
