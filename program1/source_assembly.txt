; R0=0/1
; R1=22
; R2=DATA_LOW_ADDR, DATA_LOW
; R3=DATA_HIGH_ADDR, DATA_HIGH
; R4=TRAP
; R5=SGN
; R6=EXP
; R7=GENERAL 

; LABEL_ABS: 22
; LABEL_ABS_END: 35
; LABEL_TRAP: 53
; SET_EXP_22: 63
; LABEL_TRAP_END: 66
; LABEL_LOOP: 73
; EXP_MINS_1: 84
; LABEL_LOWERBIT: 100
; LOOP_LOW: 107
; EXP_MINS_1_LOW: 118
; LABEL_FINISH: 129

LWI 0   ; ACC=MEM(R2)=DATA_LOW
MOV R3  ; R3=DATA_HIGH
LWI 1   ; ACC=MEM(R3)=DATA_HIGH
MOV R2  ; R2=DATA_LOW

; LOAD R2=DATA_LOW, R3=DATA_HIGH
LWR R2   ; ACC=MEM(R2)=DATA_LOW
MOV R2   ; R2=DATA_LOW
LWR R3   ; ACC=MEM(R3)=DATA_HIGH
MOV R3   ; R3=DATA_HIGH

; LOAD R1=22
LWI 7    ; ACC=7
SLL 2    ; ACC=7<<2=28
SUBI 6   ; ACC=28-6=22
MOV R1   ; R1=22

; LOAD R5=SGN
LWI 1   ; ACC=1
SLL 7   ; ACC=8'B1000_0000
AND R3  ; ACC=DATA_HIGH&1000_0000
BAN     ; ACC=SGN
MOV R5  ; R5=SGN
; DETERMINE WHETHER TO ABS
LWI 0   ; ACC=1
MOV R0  ; R0=1
EQ R5 R0
BRC LABEL_ABS       ; IF R0=R5 (SGN=1), BRC offset=1, ok
JMP LABEL_ABS_END   ; ELSE, SKIP, pc=35, ok

; CALCULATE ABS VALUE
LABEL_ABS:                  ; PC=22 
LWR R7   ; ACC=8'B111
SLL 3    ; ACC=8'B1110_00
ADDI 7   ; ACC=8'B1111_11
SLL 2    ; ACC=8'B1111_1100
ADDI 3   ; ACC=8'B1111_1111
MOV R7   ; R7=8'B1111_1111
LWI 0    ; CLEAR ACC
OR R2    ; ACC=0|DATA_LOW = DATA_LOW
XOR R7   ; ACC=DATA_LOW^8'B1111_1111=~DATA_LOW
MOV R2   ; R2=UPDATED DATA_LOW
OR R3    ; ACC=0|DATA_HIGH = DATA_HIGH
XOR R7   ; ACC=DATA_HIGH^8'B1111_1111=~DATA_HIGH
MOV R3   ; R3=UPDATED DATA_HIGH
LABEL_ABS_END:              ; PC=35

;LOAD R4=TRAP
LWI 0   ; CLEAR ACC
OR R2    ; ACC=0|DATA_LOW = DATA_LOW
BOR     ; ACC=|(DATA_LOW)
MOV R7   ; R7=|(DATA_LOW)
LWI 0   ; CLEAR ACC
OR R3    ; ACC=0|DATA_HIGH = DATA_HIGH
SLL 1   ; ACC=DATA_HIGH<<1 (GET RID OF SGN)
BOR     ; ACC=|(DATA_HIGH<<1)
AND R7   ; ACC=|(DATA_HIGH<<1) & |(DATA_LOW)=TRAP
MOV R4   ; R4=TRAP
LWI 1	; ACC=1
MOV R0	; R0=ACC=1
EQ R4 R0
BRC LABEL_TRAP	; IF R4=R0 (TRAP=1), BRC offset=4, ok
LWI 4   ; ACC=4
SLL 4   ; ACC=4<<4=64
ADDI 2	; ACC=66    LABEL_TRAP_END; PC=66
JR

LABEL_TRAP:                 ; PC=53
LWI 1	; ACC=1
MOV R0	; R0=ACC=1
EQ R5 R0
BRC SET_EXP_22              ; offset=6 ok
LWI 0	; ACC=0
MOV R6	; R6=ACC=0 (EXP=0)
LWI 7   ; ACC=7
SLL 3   ; ACC=7<<3=56
ADDI 4	; ACC=60    LABEL_TRAP_END; PC=60
JR

SET_EXP_22:                 ; PC=63
LWI 0	; ACC=0
OR R1	; ACC=0|22=22
MOV R6	; R6=ACC=22
LABEL_TRAP_END:             ; PC=66

; FIND_EXP
LWI 1	; ACC=1
MOV R0	; R0=1
SLL 6	; ACC=8'B0100_0000
MOV R7	; R7=8'B0100_0000
LWI 0	; CLEAR ACC
OR R3	; ACC=DATA_HIGH
MOV R4	; R4=DATA_HIGH (BACK_UP)

LABEL_LOOP:                 ; PC=73
AND R7	; ACC=DATA_HIGH&8'B0100_0000
BAN
MOV R7	; R7=(INT1[15]==1)
LWI 0	; ACC=0
MOV R0	; R0=0
EQ R7 R0
BRC EXP_mins_1		; if(INT1[15]==0), continue
LWI 1   ; ACC=1		; else, jump to LABEL_FINISH
SLL 7   ; ACC=1<<7=128
ADDI 1	; ACC=129
JR

EXP_mins_1:		; PC=84
OR R6	; ACC=R6=EXP
SUBI 1	; EXP=EXP-1
MOV R6	; ACC=UPDATED ACC
LWI 7	; ACC=7
SLL 1	; ACC=7<<1=14
ADDI 1	; ACC=15
MOV R7	; R7=15
EQ R6 R7	; IF(EXP=15)
BRC LABEL_LOWERBIT          ; offset=7 ok

LWI 0	; CLEAR ACC
OR R3	; ACC=DATA_HIGH
SLL 1	; ACC<<1
LWI 4   ; ACC=5
SLL 4   ; ACC=5<<4=80
SUBI 7	; ACC=80-7=73         LABEL_LOOP PC=73
JR

LABEL_LOWERBIT:             ; PC=100
LWI 1	; ACC=1
MOV R0	; R0=1
SLL 7	; ACC=8'B1000_0000
MOV R7	; R7=8'B1000_0000
LWI 0	; CLEAR ACC
OR R2	; ACC=DATA_LOW
MOV R4	; R4=DATA_LOW (BACK_UP)

LOOP_LOW:		    ; PC=107
AND R7	; ACC=DATA_HIGH&8'B1000_0000
BAN
MOV R7	; R7=(INT1[7]==1)
LWI 0	; ACC=0
MOV R0	; R0=0
EQ R7 R0
BRC EXP_mins_1_low	; if(INT1[7]==0) continue     offset=4, ok
LWI 1   ; ACC=1		; else, jump to LABEL_FINISH
SLL 7   ; ACC=1<<7=128
ADDI 1 	; ACC=129
JR

EXP_mins_1_low:		; PC=118
OR R6	; ACC=R6=EXP
SUBI 1	; EXP=EXP-1
MOV R6	; ACC=UPDATED ACC
LWI 7	; ACC=7
MOV R7	; R7=7
EQ R6 R7	; IF(EXP=7)
BRC LABEL_FINISH
LWI 7   ; ACC=7
SLL 4   ; ACC=7<<4=112
SUBI 5	; ACC=107         LOOP_LOW PC=107
JR


LABEL_FINISH:		; PC=129
